#!/bin/bash

PYTHON3="@PYTHON3@"
prefix="@prefix@"
pkgdatadir="@datarootdir@/@PACKAGE@"

get_abspath() {
  "$PYTHON3" -c 'import os,sys; print(os.path.abspath(os.path.expanduser(sys.argv[1])))' "$1"
}                                                                                                       
disk_image="$1"
output_root="$(get_abspath "$2")"

mkdir -p "$output_root"
pushd "$output_root"

mkdir -p mnt
mkdir -p validation

if [ ! -r "$disk_image" ]; then
  echo "$0: Error: Disk image file not readable." >&2
  exit 2
fi

#Ensure the disk image is mounted with UPartsFS.
if [ $(mount | grep "$PWD/mnt" | wc -l) -ne 1 ]; then
  "${pkgdatadir}/upartsfs/bin/upartsfs" mnt "$disk_image"
  rc=$?
  if [ $rc -ne 0 ]; then
    echo "Error mounting disk image with UPartsFS.  Aborting." >&2
    exit $rc
  fi
fi

do_xtaf=0

if [ true ]; then
  do_xtaf=1
fi

#Execute analysis scripts idempotently when possible
if [ true ]; then
  if [ ! -r "${output_root}/dfxml/analyze_with_fiwalk.sh.done.log" ]; then
    rm -rf "${output_root}/dfxml/analyze_with_fiwalk.sh*"
    "${pkgdatadir}/log_and_run_script.sh" "${pkgdatadir}/analyze_with_fiwalk.sh" "$disk_image" "${output_root}/dfxml/analyze_with_fiwalk.sh"
    if [ $? -eq 0 ]; then
      date >"${output_root}/dfxml/analyze_with_fiwalk.sh.done.log"
      xmllint --format --schema "${pkgdatadir}/dfxml_schema/dfxml.xsd" \
        "${output_root}/dfxml/analyze_with_fiwalk.sh/fiwalk.dfxml" \
        >"${output_root}/validation/fiwalk.dfxml" \
        2>"${output_root}/validation/fiwalk.dfxml.err.log"
      echo $? >"${output_root}/validation/fiwalk.dfxml.status.log"
    fi
  fi
fi

if [ $do_xtaf -eq 1 ]; then
  if [ ! -r "${output_root}/dfxml/analyze_with_uxtaf.sh.done.log" ]; then
    rm -rf "${output_root}/dfxml/analyze_with_uxtaf.sh*"
    "${pkgdatadir}/log_and_run_script.sh" "${pkgdatadir}/analyze_with_uxtaf.sh" "$disk_image" "${output_root}/dfxml/analyze_with_uxtaf.sh"
    if [ $? -eq 0 ]; then
      date >"${output_root}/dfxml/analyze_with_uxtaf.sh.done.log"
      xmllint --format --schema "${pkgdatadir}/dfxml_schema/dfxml.xsd" \
        "${output_root}/dfxml/analyze_with_uxtaf.sh/uxtaf.dfxml" \
        >"${output_root}/validation/uxtaf.dfxml" \
        2>"${output_root}/validation/uxtaf.dfxml.err.log"
      echo $? >"${output_root}/validation/uxtaf.dfxml.status.log"
    fi
  fi

  if [ ! -r "${output_root}/dfxml/analyze_with_py360.sh.done.log" ]; then
    rm -rf "${output_root}/dfxml/analyze_with_py360.sh*"
    "${pkgdatadir}/log_and_run_script.sh" "${pkgdatadir}/analyze_with_py360.sh" "$disk_image" "${output_root}/dfxml/analyze_with_py360.sh" "${output_root}/mnt"
    if [ $? -eq 0 ]; then
      date >"${output_root}/dfxml/analyze_with_py360.sh.done.log"
      xmllint --format --schema "${pkgdatadir}/dfxml_schema/dfxml.xsd" \
        "${output_root}/dfxml/analyze_with_py360.sh/py360.dfxml" \
        >"${output_root}/validation/py360.dfxml" \
        2>"${output_root}/validation/py360.dfxml.err.log"
      echo $? >"${output_root}/validation/py360.dfxml.status.log"
    fi
  fi
fi

umount mnt || fusermount -u mnt
umountrc=$?
if [ $umountrc -ne 0 ]; then
  echo "Warning: Encountered an error unmounting the disk image from UPartsFS." >&2
fi

set -e
rm -f diffs.{tex,html}
rm -f summary.{tex,html}
rm -rf differences

"$PYTHON3" "${pkgdatadir}/python3/make_summary_stats.py" \
  "fiwalk:${output_root}/dfxml/analyze_with_fiwalk.sh/fiwalk.dfxml" \
  "py360:${output_root}/dfxml/analyze_with_py360.sh/py360.dfxml" \
  "uxtaf:${output_root}/dfxml/analyze_with_uxtaf.sh/uxtaf.dfxml"

#This creates differential DFXML
"$PYTHON3" "${pkgdatadir}/python3/make_diff_stats.py" \
  "Fiwalk:fi:${output_root}/dfxml/analyze_with_fiwalk.sh/fiwalk.dfxml" \
  "Py360:p3:${output_root}/dfxml/analyze_with_py360.sh/py360.dfxml" \
  "Uxtaf:ux:${output_root}/dfxml/analyze_with_uxtaf.sh/uxtaf.dfxml"

mkdir -p summaries
for x in $(ls *-*.dfxml); do
  #Write idifference-style summaries
  "$PYTHON3" "${pkgdatadir}/python3/summarize_differential_dfxml.py" --sort-by path --summary $x >summaries/$x.txt

  #Format differential DFXML
  xmllint --format \
    $x \
    > validation/$x \
    2> validation/$x.err.log
done

${pkgdatadir}/report.sh .

popd

#Repeat warning
if [ $umountrc -ne 0 ]; then
  echo "Warning: Could not unmount disk image from UPartsFS.  This directory is still a mount point in use: '$PWD/mnt'." >&2
fi
