#!/usr/bin/python3

__version__ = "0.0.1"

import logging
import idifference
import os

def main():
    stuff = dict()
    stuff["report_title"] = "Template"
    print("""\
<!DOCTYPE html>
<html>
  <head>
    <title>%(report_title)s</title>
  </head>
  <body>""" % stuff)

    dummy_list = ["fiwalk.dfxml", "py360.dfxml", "uxtaf.dfxml"]

    #Key: DFXML file basename
    #Value: Pair, (return code, path to xmllint's stderr file)
    validation_status = dict()
    #Retrieve validation results from FSNView directory; store for use in validation section and validation errors appendix
    for (dirpath, dirnames, filenames) in os.walk("validation"):
        if not filename.endswith(".status.log"):
            continue
        bn = filename.replace(".status.log","")
        if bn not in dummy_list:
            continue
        slog_fn = filename
        elog_fn = filename.replace(".status.log", ".err.log")
        rc = None
        with open(os.path.join(dirpath, slog_fn)) as slog_fh:
            rc_txt = slog_fh.read(10).strip()
            if rc_txt != "":
                rc = int(rc_txt)
        validation_status[bn] = (rc, os.path.join(dirpath, elog_fn))

    #Write DFXML validation section
    print("""\
    <section>
      <header>DFXML validation</header>
      <table>
        <thead>
          <tr>
            <th>File</th>
            <th>DFXML schema version</th>
            <th>Validates</th>
          </tr>
        </thead>
        <tfoot></tfoot>
        <tbody>""")
    for xml_file_path in dummy_list:
        stuff = dict()

        xml_file_basename = os.path.basename(xml_file_path)

        stuff["xml_basename"] = xml_file_basename
        stuff["dfxml_version"] = "1.0"

        validation_rc = validation_status.get(xml_file_basename,(None,None))[0]
        if validation_rc is None:
            stuff["validation_results"] = "Not checked"
        elif validation_rc == 0:
            stuff["validation_results"] = "Yes"
        else:
            stuff["validation_results"] = """<a href="#validation_error_%s">no</a>""" % xml_file_basename
        print("""\
          <tr>
            <td>%(xml_basename)s</td>
            <td>%(dfxml_version)s</td>
            <td>%(validation_results)s</td>
          </tr>""" % stuff)
    print("""\
        </tbody>
      </table>
    </section>""")

    #Write differences section
    stuff = dict()
    stuff["idifference_version"] = idifference.__version__
    print("""\
    <section>
      <header>Differences in DFXML</header>
      <p>This table was created by using idifference.py (version <code>%(idifference_version)s</code>) as a library.  The name abbreviations are:</p>
      <dl>""" % stuff)
    abbreviations = dict()
    abbreviations["Ux"] = "Uxtaf"
    abbreviations["P3"] = "Py360"
    abbreviations["Fi"] = "Fiwalk"
    for ab in abbreviations:
        print("""\
      <dt>%s</dt><dd>%s</dd>""" % (ab, abbreviations[ab]))
    print("""\
      </dl>
    </section>""")

    if len(validation_status.keys()) > 0:
        print("""\
    <section>
      <header>Appendix: DFXML validation errors</header>""")
        for k in sorted(validation_status.keys()):
            stuff = dict()
            stuff["xml_basename"] = k
            stuff["xmllint_rc"] = validation_status[k][0]
            stuff["xmllint_stderr"] = validation_status[k][1]
            print("""\
      <section id="validation_error_%(xml_basename)s">
        <header>For %(xml_basename)s</header>
        <p>Error code: %(xmllint_rc)r</p>
        <pre>%(xmllint_stderr)s</pre>
      </section>""" % stuff)
        print("""\
    </section>""")

    print("""\
    <footer>
      <p>Generated by FSNView, Git version TODO.</p>
    </footer>
  </body>
</html>""")   

if __name__ == "__main__":
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument("-d", "--debug", action="store_true")
    args = parser.parse_args()

    logging.basicConfig(level=logging.DEBUG if args.debug else logging.INFO)

    main()
